# This is a basic workflow to help you get started with Actions
name: Build & Push Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # TODO: Change variable to your image's name.
  CONTAINER_REGISTRY_URL: https://registry.hub.docker.com
  REGISRTY_USERID: omearaj  
  IMAGE_NAME: spring-petclinic
  VERSION: latest
  IMAGE_PATH: $CONTAINER_REGISTRY_URL/$REGISTRY_USERID/$IMAGE_NAME:$VERSION

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven & Snyk
      env:
        SNYK_API_TOKEN: ${{ secrets.SNYK_API_TOKEN }} 
      run: |
        mvn snyk:monitor
        mvn install --file pom.xml -Prun-its
    - uses: actions/upload-artifact@v2
      with:
        name: spring-petclinic
        path: /home/runner/work/spring-petclinic/spring-petclinic/target/spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar
        if-no-files-found: warn #
        
  # Push image to Container Registry
  push Docker Image:
    # Ensure test job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push Docker Image'

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
         name: spring-petclinic
         #path: /usr
    
      - name: Display structure of downloaded files
        run: ls -R
        #working-directory: path/to/artifact

      - name: Build image with Docker
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_KEY }}" | docker login $CONTAINER_REGISTRY_URL -u $REGISTRY_USERID --password-stdin

      - name: Push image
        env: 
          DOCKER_REPO: $REGISRTY_USERID
        run: |
          IMAGE_ID=$CONTAINER_REGISTRY_URL/$DOCKER_REPO/$IMAGE_NAME
          echo $IMAGE_PATH
          echo $IMAGE_NAME 
          echo $VERSION
          docker tag $IMAGE_NAME $IMAGE_PATH
          docker push $IMAGE_PATH
  
  push CN Image:
    needs: build
    runs-on: ubuntu-latest
    if: github.event-name= 'push CN Image'
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
         name: spring-petclinic
         #path: /usr
    
      - name: Display structure of downloaded files
        run: ls -R
      
      - name: Build image with Cloud Native Buildpacks
        uses: mamezou-tech/buildpacks-action@master
        with:
          image: 'spring-pet-buildpack'
          tag: '1.0.0'
          path: 'spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar'
          builder: 'gcr.io/paketo-buildpacks/builder:base'
          
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_KEY }}" | docker login $CONTAINER_REGISTRY_URL -u $REGISTRY_USERID --password-stdin:  
      
      - name: Push image
        env: 
          DOCKER_REPO: $REGISRTY_USERID
        run: |
          IMAGE_ID=$CONTAINER_REGISTRY_URL/$DOCKER_REPO/$IMAGE_NAME
          echo $IMAGE_PATH
          echo $IMAGE_NAME 
          echo $VERSION
      #    docker tag $IMAGE_NAME $IMAGE_PATH
      #    docker push $IMAGE_PATH:  
