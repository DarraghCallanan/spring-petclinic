# This is a basic workflow to help you get started with Actions
#
name: Build Artifact, Build & Push Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # TODO: Change variable to your image's name.
  CONTAINER_REGISTRY_URL: https://registry.hub.docker.com
  REGISTRY_USERID: omearaj  
  IMAGE_NAME: spring-petclinic
  VERSION: v1.0.0
  #IMAGE_BP_NAME: omearaj/spring-petclinic-bp:  

jobs:
  snyk_vulnerability_check:
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Snyk works w/o this
      #- name: JDK
      #  uses: actions/setup-java@v1
      #  with:
      #    java-version: 13

      - name: Run Snyk to check for Maven vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
          #SNYK_API_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
          COMMAND: " " 
        with:
          command: monitor

  build_mvn_aritfact:

    needs: snyk_vulnerability_check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      
    - name: Build with Maven & Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }} 
      run: |
       mvn snyk:monitor
       mvn install
    
    - uses: actions/upload-artifact@v2
      with:
        name: spring-petclinic
        path: ${{ env.github_workspace }}./target/spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar
        if-no-files-found: warn #
        
  # Push image to Container Registry
  build_and_push-Image:
    # Ensure test job passes before pushing image.
    needs: build_mvn_aritfact

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
         name: spring-petclinic
         #path: /usr
           
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
         username: ${{ env.REGISTRY_USERID }}
         password: ${{ secrets.DOCKER_KEY }}
         repository: omearaj/${{ env.IMAGE_NAME }}
         tag_with_ref: true
         tag_with_sha: true  
         add_git_labels: true  
         #tags: latest
      
      - name: Run Snyk to check Docker images for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
         image: omearaj/${{ env.IMAGE_NAME }}
         command: monitor  
